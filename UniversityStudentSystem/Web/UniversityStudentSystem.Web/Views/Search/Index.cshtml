@using UniversityStudentSystem.Common.Extensions;
@using UniversityStudentSystem.Common;
@using System.Linq;
@using UniversityStudentSystem.Web.Helpers;

@model SearchResultModel
@{
    this.ViewBag.Title = "Search results";
    const string typesKey = "types";

    string types = string.Empty;
    bool allTypesSelected = false;
    if (this.Request.QueryString.AllKeys.Contains(typesKey))
    {
        types = this.Request.QueryString[typesKey].ToString();
        allTypesSelected = types.Contains(SearchResultModel.CourseSearchKey) && types.Contains(SearchResultModel.ForumPostSearchKey) && types.Contains(SearchResultModel.NewsSearchKey) && types.Contains(SearchResultModel.SpecialtySearchKey) && types.Contains(SearchResultModel.TrainersSearchKey);
    }
    else
    {
        allTypesSelected = true;
    }
}

<div class="row" style="margin-top: 50px;">
    <div class="col-md-8 col-md-offset-2">
        <form action="/Search" id="search-form" method="get">
            <div class="form-group">
                <input class="form-control" name="text" type="text" value="@Model.Criteria" maxlength="100" pattern="@WebConstants.SearchPatternValidation" />
                <p class="help-block">At least 3 symbols required (leading and trailing spaces are ignored)</p>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <label for="All">
                        @Html.CheckboxCustom(allTypesSelected, "All") All
                    </label>
                </div>
                <div class="col-md-2">
                    <label for="Courses">
                        @Html.CheckboxCustom(types.Contains(SearchResultModel.CourseSearchKey), "Courses", SearchResultModel.CourseSearchKey, typesKey) Courses
                    </label>
                </div>
                <div class="col-md-2">
                    <label for="Specialties">
                        @Html.CheckboxCustom(types.Contains(SearchResultModel.SpecialtySearchKey), "Specialties", SearchResultModel.SpecialtySearchKey, typesKey) Specialties
                    </label>
                </div>
                <div class="col-md-2">
                    <label for="Trainers">
                        @Html.CheckboxCustom(types.Contains(SearchResultModel.TrainersSearchKey), "Trainers", SearchResultModel.TrainersSearchKey, typesKey) Trainers
                    </label>
                </div>
                <div class="col-md-2">
                    <label for="News">
                        @Html.CheckboxCustom(types.Contains(SearchResultModel.NewsSearchKey), "News", SearchResultModel.NewsSearchKey, typesKey) News
                    </label>
                </div>
                <div class="col-md-2">
                    <label for="ForumPosts">
                        @Html.CheckboxCustom(types.Contains(SearchResultModel.ForumPostSearchKey), "ForumPosts", SearchResultModel.ForumPostSearchKey, typesKey) Forum posts
                    </label>
                </div>
            </div>
            <div class="row">
                <p class="text-danger hidden" id="error-message"> Please select at least one category </p> 
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-success btn-outline btn-block btn-lg" value="Search" />
            </div>

        </form>
    </div>
</div>

<div class="row text-center">
    <h2>
        Search results
    </h2>
</div>

<div class="row">
    @if (this.TempData["Error"] != null)
    {
        <p class="lead text-danger">@this.TempData["Error"].ToString()</p>
    }
    else
    {
        if (types.Contains(SearchResultModel.CourseSearchKey))
        {
            <h3>Courses <span class="label label-success">@this.Model.Courses.Count results found</span> </h3>
            <hr />
            <div class="row">
                <div class="col-md-12">

                    <div class="panel panel-default">
                        <div class="panel-body">
                            @foreach (var course in Model.Courses)
                            {
                                <div class="col-md-2">
                                    @Html.ActionLink(course.Name, "Details", "Courses", new { area = "Public", id = course.Id, name = course.Name.ToUrl() }, null)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        if (types.Contains(SearchResultModel.SpecialtySearchKey))
        {
            <h3>Specialties <span class="label label-success">@this.Model.Specialties.Count results found</span>   </h3>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @foreach (var spec in Model.Specialties)
                            {
                                <div class="col-md-2">
                                    @Html.ActionLink(spec.Name, "Details", "Specialties", new { area = "Public", id = spec.Id, name = spec.Name.ToUrl() }, null)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        if (types.Contains(SearchResultModel.NewsSearchKey))
        {
            <h3>News <span class="label label-success">@this.Model.News.Count results found</span> </h3>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @foreach (var news in Model.News)
                            {
                                <div class="col-md-2">
                                    @Html.ActionLink(news.Title, "Details", "News", new { area = "Public", id = news.Id, name = news.Title.ToUrl() }, null)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        if (types.Contains(SearchResultModel.ForumPostSearchKey))
        {
            <h3>Forum posts <span class="label label-success">@this.Model.ForumPosts.Count results found</span> </h3>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @foreach (var forumPost in this.Model.ForumPosts)
                            {
                                <div class="col-md-2">
                                    @Html.ActionLink(forumPost.Title, "Details", "Forum", new { area = "Public", id = forumPost.Id, name = forumPost.Title.ToUrl() }, null)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        if (types.Contains(SearchResultModel.TrainersSearchKey))
        {
            <h3>Trainers <span class="label label-success">@this.Model.Trainers.Count results found</span> </h3>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @foreach (var trainer in Model.Trainers)
                            {
                                <div class="col-md-2">
                                    @Html.ActionLink(trainer.FullName, "Details", "Trainers", new { area = "Public", id = trainer.Id, name = trainer.FullName.ToUrl() }, null)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@Scripts.Render("~/SearchScripts")
