@using UniversityStudentSystem.Web.Areas.Trainer.Models;

@model TestInputModel

@{
    ViewBag.Title = "AddTest";
}

<h2>Add a new test</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsEnabled, "CheckBoxTemplate")
                  @*  @Html.ValidationMessageFor(model => model.IsEnabled, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>

        @if (Model != null && Model.Questions.Any())
        {
            @Html.Partial("_Questions", Model);
        }
        else
        {
            @(Html.Partial("_Questions", new  TestInputModel() { Questions = new List<QuestionInputModel>() { new QuestionInputModel() { Answers = new List<AnswerInputModel>() { new AnswerInputModel(), new AnswerInputModel(), new AnswerInputModel() } } } }))
        }

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Create" class="btn btn-lg btn-outline btn-info" />
            </div>
            <div class="col-md-9">
                <input type="button" class="btn add-question pull-right btn-outline btn-default" value="Add question" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        jQuery.extend(jQuery.validator.methods, {
            date: function (value, element) {
                var res = this.optional(element) || kendo.parseDate(value, "dd/MM/yyyy HH:mm") != null;
                return res;
            },
            number: function (value, element) {
                return this.optional(element) || kendo.parseFloat(value) != null;
            }
        });
    </script>
    <script>
        $('#questions').on('click', '.add-answer', function () {
            var $btn = $(this);
            var $parent = $btn.parent();
            var $grantParent = $btn.parent().parent();
            var indexOfQuestion = $('#questions').children().index($grantParent.parent().parent().parent()); 
            
            var value = $grantParent.children().length - 1;
            var $result = $('<div>').addClass('row')
                            .append($('<div>')
                                .addClass('col-md-12')
                                .append($('<div>').addClass('col-md-2')
                                        .append($('<input>').attr('type', 'radio').attr('value', value).attr('name', 'Questions[' + indexOfQuestion + '].Index').addClass('my-radio')))
                                .append($('<div>').addClass('col-md-9')
                                        .append($('<input>').attr('type', 'text').attr('name', 'Questions[' + indexOfQuestion + '].Answers[' + value + '].Content').addClass('form-control input-validation-error'))));
            $result.insertBefore($parent);
        })
    </script>
    <script>
        $('body').on('click', '.add-question', function () {
            var $btn = $(this);
            var $grantParent = $btn.parent().parent();

            var indexOfNewQuestion = $('#questions').children().length;

            function makeAnswer(questionIndex, value ) {
                return ($('<div>').addClass('row')
                            .append($('<div>').addClass('col-md-12')
                                .append($('<div>').addClass('col-md-2')
                                    .append($('<input>').attr('type', 'radio').attr('name', 'Questions[' + questionIndex + '].Index').attr('value', value).addClass('my-radio')))
                                .append($('<div>').addClass('col-md-9')
                                    .append($('<input>').addClass('form-control').attr('type', 'text').attr('name', 'Questions[' + questionIndex + '].Answers[' + value + '].Content')))));
            }

            console.log($grantParent);

            var $result = $('<div>').addClass('panel panel-info')
                            .append($('<div>').addClass('panel-heading')
                                    .append($('<h4>')
                                        .append($('<i>').addClass('fa fa-question-circle fa-fw'))
                                        .append($('<span>').text((indexOfNewQuestion + 1) + '. Question'))))
                            .append($('<div>').addClass('panel-body')
                                    .append($('<textarea>').addClass('form-control').attr('placeholder', 'Your question here...').attr('name', 'Questions[' + indexOfNewQuestion + '].Content'))
                                    .append($('<div>').addClass('row').attr('style', 'margin-top: 5px;')
                                        .append($('<label>').addClass('control-label col-md-1').attr('for', 'Q' + indexOfNewQuestion).text('Points'))
                                        .append($('<div>').addClass('col-md-2')
                                            .append($('<input>').addClass('form-control').attr('id', 'Q' + indexOfNewQuestion).attr('min', 0).attr('name', 'Questions[' + indexOfNewQuestion + '].Points').attr('type', 'number'))))
                                    .append($('<p>').addClass('lead').text('Answers ')
                                        .append($('<span>').addClass('text-muted').text('(By default first answer will be marked as correct)').attr('style', 'font-size: 14px;')))
                                    .append($('<div>').addClass('row')
                                        .append($('<div>').addClass('col-md-5')
                                            .append(makeAnswer(indexOfNewQuestion, 0))
                                            .append(makeAnswer(indexOfNewQuestion, 1))
                                            .append(makeAnswer(indexOfNewQuestion, 2))
                                            .append($('<div>').addClass('col-md-11')
                                                .append($('<input>').addClass('add-answer btn btn-sm pull-right btn-default btn-outline').attr('type', 'button').attr('value', 'Add answer'))))));
            console.log($grantParent);
            $('#questions').append($result);
        })
    </script>

}

@section KendoCss{
    @Styles.Render("~/bundles/css-kendo");
}

@section KendoHead{
    @Scripts.Render("~/bundles/js-kendo")
}

@section KendoJs{
    @Scripts.Render("~/bundles/js-kendo-datetimepicker")
}